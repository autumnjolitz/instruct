import sys
import os
import subprocess
import shlex
from contextlib import suppress

try:
    from packaging.version import parse as parse_version
except ImportError:
    from setuptools._vendor.packaging.version import parse as parse_version

here = os.path.dirname(os.path.abspath(__file__))

with open(os.path.join(here, "CURRENT_VERSION.txt")) as fh:
    for line in fh:
        if line.strip().startswith("#"):
            continue
        version = line.strip()
        break
    else:
        fh.seek(0)
        raise LookupError(f"Cannot find a version inside file! It has {fh.read()!r}")

empty_s = ""
current_sha = ""
if os.path.exists(os.path.join(here, ".git")):
    current_sha = subprocess.check_output(shlex.split("git rev-parse HEAD")).strip().decode()

full_version = version
if current_sha:
    full_version = f"{version}+git.{current_sha}"
parsed_version = parse_version(full_version)


def write_about_and_emit_version():
    with open(os.path.join(here, "instruct/about.py"), "w") as fh:
        fh.write(
            f"""# Autogenerated from `attr: generate_version.write_about_and_emit_version`
# it is run on setup.py/pip installs!
from typing import NamedTuple, Optional, Tuple
from functools import total_ordering


@total_ordering
class VersionInfo(NamedTuple):
    major: int
    minor: int
    micro: int

    pre: Optional[Tuple[str, int]]
    post: Optional[int]
    local: Optional[str]

    def __eq__(self, other):
        return self[:3] == other[:3]

    def __lt__(self, other):
        return self[:3] < other[:3]

    @property
    def release(self):
        return self[:3]

    @property
    def public(self) -> str:
        return "{full_version}"


__version__: str = "{full_version}"
__version_info__: VersionInfo = VersionInfo(
    {parsed_version.major!r},
    {parsed_version.minor!r},
    {parsed_version.micro!r},
    {parsed_version.pre!r},
    {parsed_version.post!r},
    {parsed_version.local or None!r},
)
__commit__: Optional[str] = {parsed_version.local or None!r}
"""
        )
    return version
