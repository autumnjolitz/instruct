
{% set applicable_fields = chain(fields, properties)|deduplicate %}

def __getitem__(self: Self, key: str) -> Any:
    {%- if applicable_fields %}
    '''
    Set attributes or properies via {{ class_name }}(...)[name] = ...
    where key may one of {% for field in applicable_fields %}"{{ field }}"{% if not loop.last %} | {% endif %}
    {%- endfor%}
    '''
    {%- endif %}
    {%- for field in applicable_fields %}
    {%if not loop.first%}el{%endif%}if key == '{{field}}':
        {{get_variable_template|format(key=field)|indent(8)}}
        raise RuntimeError("{{class_name}} has broken __getter_template__! Should've had a return!")
    {%- endfor %}
    raise KeyError(key)

def __setitem__(self: Self, key: str, val: Any) -> None:
    {%- if applicable_fields %}
    '''
    Set attributes or properies via {{ class_name }}(...)[name] = ...
    where key may one of {% for field in applicable_fields %}"{{ field }}"{% if not loop.last %} | {% endif %}
    {%- endfor%}
    '''
    {%- endif %}
    {%- for field in applicable_fields %}
    {%if not loop.first%}el{%endif%}if key == '{{field}}':
        self.{{field}} = val
        return
    {%- endfor %}
    raise KeyError(key)
